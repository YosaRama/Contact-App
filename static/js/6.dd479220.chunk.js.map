{"version":3,"sources":["profile.jpg","component/Header.js","component/ContactFields.js","component/Contact.js","Layout.js"],"names":["module","exports","ContactHeader","useState","isOpen","setIsOpen","expandable","color","inNavbar","onClick","show","navbar","href","className","inNav","ContactFields","key","_style","width","sorter","filter","label","Contact","history","useHistory","contactData","setcontactData","isLoading","setIsLoading","handleDelete","e","id","target","DeleteID","Axios","method","url","then","res","console","log","deleteItem","splice","length","catch","err","handleEdit","push","pathname","data","handleShow","useEffect","headers","responsive","loading","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","pagination","scopedSlots","action","item","index","variant","image","src","photo","includes","Profile","alt","style","borderRadius","height","Layout"],"mappings":"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","file":"static/js/6.dd479220.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.d4b45420.jpg\";","import {\r\n  CToggler,\r\n  CNavbar,\r\n  CNavLink,\r\n  CCollapse,\r\n  CNavbarNav,\r\n  CDropdownItem,\r\n  CDropdown,\r\n  CNavbarBrand,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n} from \"@coreui/react\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction ContactHeader() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <CNavbar expandable=\"sm\" color=\"info\">\r\n        <CToggler inNavbar onClick={() => setIsOpen(!isOpen)} />\r\n        <CNavbarBrand>Contact</CNavbarBrand>\r\n        <CCollapse show={isOpen} navbar>\r\n          <CNavbarNav>\r\n            <CNavLink href=\"/\">Home</CNavLink>\r\n            <CNavLink href=\"/#/Add-Contact\">Add Contact</CNavLink>\r\n          </CNavbarNav>\r\n          <CNavbarNav className=\"ml-auto\">\r\n            <CDropdown inNav>\r\n              <CDropdownToggle color=\"primary\">\r\n                Yosa Rama Dinata\r\n              </CDropdownToggle>\r\n              <CDropdownMenu>\r\n                <CDropdownItem>Account</CDropdownItem>\r\n                <CDropdownItem>Settings</CDropdownItem>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n          </CNavbarNav>\r\n        </CCollapse>\r\n      </CNavbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactHeader;\r\n","const ContactFields = [\r\n  {\r\n    key: \"image\",\r\n    _style: { width: \"5%\" },\r\n    sorter: false,\r\n    filter: false,\r\n    label: \"\",\r\n  },\r\n  { key: \"firstName\" },\r\n  { key: \"lastName\" },\r\n  { key: \"age\" },\r\n  {\r\n    key: \"action\",\r\n    label: \"\",\r\n    sorter: false,\r\n    filter: false,\r\n    _style: { width: \"5%\" },\r\n  },\r\n];\r\n\r\nexport default ContactFields;\r\n","import {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CContainer,\r\n  CDataTable,\r\n} from \"@coreui/react\";\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ContactFields from \"./ContactFields\";\r\nimport Profile from \"../profile.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Contact() {\r\n  let history = useHistory();\r\n  const [contactData, setcontactData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  function handleClick() {\r\n    history.push(\"/Add-Contact\");\r\n  }\r\n\r\n  function handleDelete(e) {\r\n    const id = e.target.id;\r\n    const DeleteID = contactData[id].id;\r\n\r\n    Axios({\r\n      method: \"DELETE\",\r\n      url: \"https://simple-contact-crud.herokuapp.com/contact/\" + DeleteID,\r\n    })\r\n      .then((res) => {\r\n        console.log(id);\r\n        console.log(contactData[id].id);\r\n        let deleteItem = contactData.splice(id, 1);\r\n        setcontactData(contactData.splice(deleteItem, contactData.length));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n        ////// API DELETE ERROR ---- THIS SECTION JUST SHOW IF IT'S WORK //////\r\n\r\n        let deleteItem = contactData.splice(id, 1);\r\n        setcontactData(contactData.splice(deleteItem, contactData.length));\r\n      });\r\n  }\r\n\r\n  function handleEdit(e) {\r\n    const id = e.target.id;\r\n    history.push({ pathname: \"/Edit-Contact\", data: contactData[id] });\r\n  }\r\n\r\n  function handleShow(e) {\r\n    const id = e.target.id;\r\n    history.push({\r\n      pathname: \"/Show-Profile\",\r\n      data: contactData[id].id,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios({\r\n      method: \"GET\",\r\n      url: \"https://simple-contact-crud.herokuapp.com/contact\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => {\r\n      setcontactData(res.data.data);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CContainer className=\"my-5\">\r\n        <CCard>\r\n          <CCardHeader>\r\n            <h1>Contact List</h1>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CDataTable\r\n              responsive\r\n              loading={isLoading}\r\n              items={contactData}\r\n              fields={ContactFields}\r\n              columnFilter\r\n              tableFilter\r\n              itemsPerPageSelect\r\n              itemsPerPage={5}\r\n              hover\r\n              sorter\r\n              pagination\r\n              scopedSlots={{\r\n                action: (item, index) => (\r\n                  <td>\r\n                    <CButtonGroup>\r\n                      <CButton\r\n                        color=\"primary\"\r\n                        id={index}\r\n                        variant=\"ghost\"\r\n                        onClick={handleShow}\r\n                      >\r\n                        Show\r\n                      </CButton>\r\n                      <CButton\r\n                        color=\"info\"\r\n                        variant=\"outline\"\r\n                        id={index}\r\n                        onClick={handleEdit}\r\n                      >\r\n                        Edit\r\n                      </CButton>\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        variant=\"outline\"\r\n                        id={index}\r\n                        onClick={handleDelete}\r\n                      >\r\n                        Delete\r\n                      </CButton>\r\n                    </CButtonGroup>\r\n                  </td>\r\n                ),\r\n                image: (item) => (\r\n                  <td>\r\n                    <CContainer>\r\n                      <img\r\n                        src={item.photo.includes(\"http\") ? item.photo : Profile}\r\n                        alt=\"none\"\r\n                        style={{\r\n                          borderRadius: \"100%\",\r\n                          width: \"50px\",\r\n                          height: \"50px\",\r\n                        }}\r\n                      />\r\n                    </CContainer>\r\n                  </td>\r\n                ),\r\n              }}\r\n            />\r\n          </CCardBody>\r\n          <CButton color=\"success\" onClick={handleClick}>\r\n            Add Contact\r\n          </CButton>\r\n        </CCard>\r\n      </CContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"./component/Contact\";\r\nimport ContactHeader from \"./component/Header\";\r\nimport \"./scss/style.scss\";\r\n\r\nfunction Layout() {\r\n  return (\r\n    <>\r\n      <ContactHeader />\r\n      <Contact />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}